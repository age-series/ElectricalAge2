syntax = "proto3";
package org.eln2.proto.simulator;
option optimize_for = LITE_RUNTIME;

import "simulator/component.proto";

message Command {
    oneof cmd {
        AddComponent add_component = 1;
        DestroyComponent destroy_component = 2;
        Connect connect = 3;
        Disconnect disconnect = 4;
        GetComponent get_component = 5;
        GetComponentRange get_component_range = 6;
    }
}

message AddComponent {
    Component component = 1;
}

// Also destroys any connections.
message DestroyComponent {
    int64 component_id = 1;
}

// Connects 2 or more components to each other.
// This acts as if the pins are connected with an infinite-conductance (0-ohm) wire.
message Connect {
    // `components` and `pins` must be equal length.
    repeated int64 components = 1;
    // 0-indexed pin ID, one for each component
    // Different components have different pin counts, which is documented in component.proto.
    repeated int32 pins = 2;
}

// This must match an earlier Connect. It doesn't need to be exact; you can connect 3 components,
// then disconnect 2 of them.
message Disconnect {
    repeated int64 components = 1;
    repeated int64 pins = 2;
}

// Requests the complete component state, e.g. for WAILA.
message GetComponent {
    int64 component_id = 1;
}

// Requests the state of all components in a circle.
// This is expected to be used to transmit up-to-date WAILA info before it's requested.
message GetComponentRange {
    Location location = 1;
    int64 range = 2;
}
