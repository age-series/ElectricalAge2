syntax = "proto3";
package org.eln2.proto.logcollector;
option optimize_for = LITE_RUNTIME;

import "types.proto";

// Everything in this file is still in flux. It will be locked down prior to first alpha release.
service LogService {
    rpc Log (LogEntry) returns (LogResponse);
}

message LogEntry {
    // Fields that identify the client:
    string game = 1;
    Version game_version = 2;
    Version forge = 3;
    Version eln = 4;
    OS os = 5;
    string uuid = 6; // May be empty.
    string language = 7; // en_US, say.
    // The message(s) that we're trying to log.
    // Any of these fields may be empty.
    CrashReport crash_report = 8;
    Analytics analytics = 9;
}

// This is a straight textual copy of Forge's crash report, for later perusal.
message CrashReport {
    string report = 1;
}

// There should be a config section to disable/limit this.
message Analytics {
    // Included mainly for stability/crash analysis.
    message OtherMod {
        string name = 1;
        Version version = 2;
    }
    repeated OtherMod mods = 1;
    // Included for performance analysis.
    message Circuit {
        int32 matrix_size = 1;
        message Timing {
            int32 matrix_usec = 1;
            int32 thevenin_usec = 2;
            int32 norton_usec = 3;
            int32 other_usec = 4;
        }
        Timing avg = 2;
        Timing max = 3;
        repeated Component component = 4;
    }
    message Component {
        string type = 1;
        int32 count = 2;
    }
    repeated Circuit networks = 2;
    // What else is useful to collect stats on?
}

message LogResponse {
}
